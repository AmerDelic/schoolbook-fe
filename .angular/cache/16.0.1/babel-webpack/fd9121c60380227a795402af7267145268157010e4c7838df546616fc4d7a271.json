{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserService } from './service/user.service';\nimport { AuthenticationService } from './service/authentication.service';\nimport { AuthInterceptor } from './interceptor/auth.interceptor';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthenticationGuard } from './guard/authentication.guard';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserComponent } from './user/user.component';\nimport { ToastrModule } from 'ngx-toastr';\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, LoginComponent, RegisterComponent, UserComponent],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, BrowserAnimationsModule, ToastrModule.forRoot()],\n  providers: [AuthenticationGuard, AuthenticationService, UserService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":{"version":3,"names":["NgModule","BrowserModule","HTTP_INTERCEPTORS","HttpClientModule","AppRoutingModule","AppComponent","UserService","AuthenticationService","AuthInterceptor","BrowserAnimationsModule","AuthenticationGuard","LoginComponent","RegisterComponent","UserComponent","ToastrModule","AppModule","__decorate","declarations","imports","forRoot","providers","provide","useClass","multi","bootstrap"],"sources":["/home/amer/AngularProjects/schoolbook/src/app/app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserService } from './service/user.service';\nimport { AuthenticationService } from './service/authentication.service';\nimport { AuthInterceptor } from './interceptor/auth.interceptor';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthenticationGuard } from './guard/authentication.guard';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserComponent } from './user/user.component';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    UserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [\n    AuthenticationGuard,  \n    AuthenticationService, \n    UserService, \n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,sBAAsB;AAE1E,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,qBAAqB,QAAQ,kCAAkC;AACxE,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,uBAAuB,QAAQ,sCAAsC;AAC9E,SAASC,mBAAmB,QAAQ,8BAA8B;AAClE,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,YAAY,QAAQ,YAAY;AAuBzC,IAAaC,SAAS,GAAtB,MAAaA,SAAS,GAAI;AAAbA,SAAS,GAAAC,UAAA,EArBrBhB,QAAQ,CAAC;EACRiB,YAAY,EAAE,CACZZ,YAAY,EACZM,cAAc,EACdC,iBAAiB,EACjBC,aAAa,CACd;EACDK,OAAO,EAAE,CACPjB,aAAa,EACbG,gBAAgB,EAChBD,gBAAgB,EAChBM,uBAAuB,EACvBK,YAAY,CAACK,OAAO,EAAE,CACvB;EACDC,SAAS,EAAE,CACTV,mBAAmB,EACnBH,qBAAqB,EACrBD,WAAW,EACX;IAACe,OAAO,EAAEnB,iBAAiB;IAAEoB,QAAQ,EAAEd,eAAe;IAAEe,KAAK,EAAE;EAAI,CAAC,CAAC;EACvEC,SAAS,EAAE,CAACnB,YAAY;CACzB,CAAC,C,EACWU,SAAS,CAAI;SAAbA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}