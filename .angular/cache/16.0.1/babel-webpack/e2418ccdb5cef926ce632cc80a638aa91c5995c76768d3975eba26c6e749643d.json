{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { HeaderType } from '../enum/header-type.enum';\nlet LoginComponent = class LoginComponent {\n  constructor(router, authService, toastr) {\n    this.router = router;\n    this.authService = authService;\n    this.toastr = toastr;\n    this.showLoading = false;\n    this.subscriptions = [];\n  }\n  ngOnInit() {\n    if (this.authService.isLoggedIn()) {\n      this.router.navigateByUrl('/user/management');\n      this.toastr.success(\"Hello, you're logged in.\");\n    } else {\n      this.router.navigateByUrl('/login');\n      this.toastr.warning(\"Hello, something went wrong.\");\n    }\n  }\n  onLogin(user) {\n    this.showLoading = true;\n    this.subscriptions.push(this.authService.login(user).subscribe(response => {\n      if (response instanceof HttpResponse) {\n        const token = response.headers.get(HeaderType.JWT_TOKEN);\n        const user = response.body;\n        if (token !== null && user !== null) {\n          this.authService.saveToken(token);\n          this.authService.addUserToCache(user);\n          this.router.navigateByUrl('/user/management');\n          this.showLoading = false;\n        }\n      } else {\n        this.toastr.error('Login failed: ', response.error);\n        this.showLoading = false;\n      }\n    }));\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.less']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","HttpResponse","HeaderType","LoginComponent","constructor","router","authService","toastr","showLoading","subscriptions","ngOnInit","isLoggedIn","navigateByUrl","success","warning","onLogin","user","push","login","subscribe","response","token","headers","get","JWT_TOKEN","body","saveToken","addUserToCache","error","ngOnDestroy","forEach","sub","unsubscribe","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/amer/AngularProjects/schoolbook/src/app/login/login.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from '../model/user';\nimport { Subscription } from 'rxjs';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { HeaderType } from '../enum/header-type.enum';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.less']\n})\nexport class LoginComponent implements OnInit, OnDestroy{\n  public showLoading: boolean = false;\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private router: Router, \n    private authService: AuthenticationService,\n    private toastr: ToastrService)  {}\n    \n  \n  ngOnInit(): void {\n    if(this.authService.isLoggedIn()) {\n      this.router.navigateByUrl('/user/management');\n      this.toastr.success(\"Hello, you're logged in.\")\n    } else {\n      this.router.navigateByUrl('/login')\n      this.toastr.warning(\"Hello, something went wrong.\")\n    }\n  }\n\n  public onLogin(user: User): void {\n    this.showLoading = true;\n    this.subscriptions.push(\n      this.authService.login(user).subscribe(\n        (response: HttpResponse<User> | HttpErrorResponse) => {\n          if(response instanceof HttpResponse) {\n            const token = response.headers.get(HeaderType.JWT_TOKEN);\n            const user  = response.body;\n            if(token !== null && user !== null) {\n              this.authService.saveToken(token);\n              this.authService.addUserToCache(user);\n              this.router.navigateByUrl('/user/management')\n              this.showLoading = false;\n            }\n          } else {\n            this.toastr.error('Login failed: ', response.error);\n            this.showLoading = false;\n          }\n        }\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAM5D,SAA4BC,YAAY,QAAQ,sBAAsB;AACtE,SAASC,UAAU,QAAQ,0BAA0B;AAOrD,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAIzBC,YACUC,MAAc,EACdC,WAAkC,EAClCC,MAAqB;IAFrB,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IANT,KAAAC,WAAW,GAAY,KAAK;IAC3B,KAAAC,aAAa,GAAmB,EAAE;EAKP;EAGnCC,QAAQA,CAAA;IACN,IAAG,IAAI,CAACJ,WAAW,CAACK,UAAU,EAAE,EAAE;MAChC,IAAI,CAACN,MAAM,CAACO,aAAa,CAAC,kBAAkB,CAAC;MAC7C,IAAI,CAACL,MAAM,CAACM,OAAO,CAAC,0BAA0B,CAAC;KAChD,MAAM;MACL,IAAI,CAACR,MAAM,CAACO,aAAa,CAAC,QAAQ,CAAC;MACnC,IAAI,CAACL,MAAM,CAACO,OAAO,CAAC,8BAA8B,CAAC;;EAEvD;EAEOC,OAAOA,CAACC,IAAU;IACvB,IAAI,CAACR,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,aAAa,CAACQ,IAAI,CACrB,IAAI,CAACX,WAAW,CAACY,KAAK,CAACF,IAAI,CAAC,CAACG,SAAS,CACnCC,QAAgD,IAAI;MACnD,IAAGA,QAAQ,YAAYnB,YAAY,EAAE;QACnC,MAAMoB,KAAK,GAAGD,QAAQ,CAACE,OAAO,CAACC,GAAG,CAACrB,UAAU,CAACsB,SAAS,CAAC;QACxD,MAAMR,IAAI,GAAII,QAAQ,CAACK,IAAI;QAC3B,IAAGJ,KAAK,KAAK,IAAI,IAAIL,IAAI,KAAK,IAAI,EAAE;UAClC,IAAI,CAACV,WAAW,CAACoB,SAAS,CAACL,KAAK,CAAC;UACjC,IAAI,CAACf,WAAW,CAACqB,cAAc,CAACX,IAAI,CAAC;UACrC,IAAI,CAACX,MAAM,CAACO,aAAa,CAAC,kBAAkB,CAAC;UAC7C,IAAI,CAACJ,WAAW,GAAG,KAAK;;OAE3B,MAAM;QACL,IAAI,CAACD,MAAM,CAACqB,KAAK,CAAC,gBAAgB,EAAER,QAAQ,CAACQ,KAAK,CAAC;QACnD,IAAI,CAACpB,WAAW,GAAG,KAAK;;IAE5B,CAAC,CACF,CACF;EACH;EAEAqB,WAAWA,CAAA;IACT,IAAI,CAACpB,aAAa,CAACqB,OAAO,CAACC,GAAG,IAAIA,GAAG,CAACC,WAAW,EAAE,CAAC;EACtD;CAED;AA/CY7B,cAAc,GAAA8B,UAAA,EAL1BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWjC,cAAc,CA+C1B;SA/CYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}