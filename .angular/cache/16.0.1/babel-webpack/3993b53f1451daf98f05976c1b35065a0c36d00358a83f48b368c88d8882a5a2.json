{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/home/amer/AngularProjects/schoolbook/src/app/login/login.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from '../model/user';\nimport { Subscription } from 'rxjs';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { HeaderType } from '../enum/header-type.enum';\nimport {  }\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.less']\n})\nexport class LoginComponent implements OnInit, OnDestroy{\n  public showLoading: boolean = false;\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private router: Router, \n    private authService: AuthenticationService,\n    private toastr: ToastrService)  {}\n    \n  \n  ngOnInit(): void {\n    if(this.authService.isLoggedIn()) {\n      this.router.navigateByUrl('/user/management');\n      this.toastr.success(\"Hello, you're logged in.\")\n    } else {\n      this.router.navigateByUrl('/login')\n      this.toastr.warning(\"Hello, something went wrong.\")\n    }\n  }\n\n  public onLogin(user: User): void {\n    this.showLoading = true;\n    const subscription = this.authService.login(user).subscribe(\n      (response: HttpResponse<any>) => {\n        const token = response.headers.get(HeaderType.JWT_TOKEN);\n        const user = response.body;\n        if (token !== null && user !== null) {\n          this.authService.saveToken(token);\n          this.authService.addUserToCache(user);\n          this.router.navigateByUrl('/user/management');\n        }\n        this.showLoading = false;\n      },\n      (errorResponse) => {\n        this.toastr.error(errorResponse.error.message);\n        this.showLoading = false;\n      }\n    );\n    if (subscription != null) {\n      this.subscriptions.push(subscription);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n \n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}