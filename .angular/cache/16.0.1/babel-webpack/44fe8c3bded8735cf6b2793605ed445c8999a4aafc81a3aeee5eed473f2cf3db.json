{"ast":null,"code":"import { NotificationType } from '../enum/notification-type.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/authentication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../service/notification.service\";\nclass AuthenticationGuard {\n  constructor(authService, router, notificationService) {\n    this.authService = authService;\n    this.router = router;\n    this.notificationService = notificationService;\n  }\n  canActivate(route, state) {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    this.notificationService.notify(NotificationType.ERROR, `You need to login to access this page`);\n    return false;\n  }\n}\nAuthenticationGuard.ɵfac = function AuthenticationGuard_Factory(t) {\n  return new (t || AuthenticationGuard)(i0.ɵɵinject(i1.AuthenticationService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.NotificationService));\n};\nAuthenticationGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationGuard,\n  factory: AuthenticationGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthenticationGuard };","map":{"version":3,"names":["NotificationType","AuthenticationGuard","constructor","authService","router","notificationService","canActivate","route","state","isLoggedIn","navigate","notify","ERROR","i0","ɵɵinject","i1","AuthenticationService","i2","Router","i3","NotificationService","factory","ɵfac","providedIn"],"sources":["/home/amer/AngularProjects/schoolbook/src/app/guard/authentication.guard.ts"],"sourcesContent":["import { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Injectable, inject } from '@angular/core';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { NotificationService } from '../service/notification.service';\nimport { NotificationType } from '../enum/notification-type.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationGuard implements CanActivate {\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private notificationService: NotificationService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    this.notificationService.notify(NotificationType.ERROR, `You need to login to access this page`)\n    return false;\n  }\n}\n"],"mappings":"AAIA,SAASA,gBAAgB,QAAQ,gCAAgC;;;;;AAEjE,MAGaC,mBAAmB;EAC9BC,YACUC,WAAkC,EAClCC,MAAc,EACdC,mBAAwC;IAFxC,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,mBAAmB,GAAnBA,mBAAmB;EAC1B;EAEHC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACnE,IAAI,IAAI,CAACL,WAAW,CAACM,UAAU,EAAE,EAAE;MACjC,OAAO,IAAI;;IAEb,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChC,IAAI,CAACL,mBAAmB,CAACM,MAAM,CAACX,gBAAgB,CAACY,KAAK,EAAE,uCAAuC,CAAC;IAChG,OAAO,KAAK;EACd;;AAdWX,mBAAmB,C;mBAAnBA,mBAAmB,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,qBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,mBAAA;AAAA;AAAnBnB,mBAAmB,C;SAAnBA,mBAAmB;EAAAoB,OAAA,EAAnBpB,mBAAmB,CAAAqB,IAAA;EAAAC,UAAA,EAFlB;AAAM;SAEPtB,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}